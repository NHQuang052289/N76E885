C51 COMPILER V9.60.0.0   GPIO                                                              02/21/2021 17:01:05 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE GPIO
OBJECT MODULE PLACED IN .\Output\GPIO.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Code\GPIO.C OPTIMIZE(4,SPEED) BROWSE INCDIR(..\..\Include) DEFINE(FOSC_2
                    -21184) DEBUG OBJECTEXTEND PRINT(.\LST\GPIO.lst) TABS(2) OBJECT(.\Output\GPIO.obj)

line level    source

   1          #include "N76E885.h"
   2          #include "Version.h"
   3          #include "Typedef.h"
   4          #include "Define.h"
   5          #include "SFR_Macro.h"
   6          #include "Common.h"
   7          #include "Delay.h"
   8          #include "Function_Define.h"
   9          #include <absacc.h>  
  10          
  11            /*define GPIO*/
  12          #define RED     P04
  13          #define YELLOW  P03
  14          #define BUTTON  P34
  15          
  16            /*define state button*/
  17          #define KEY_STATE_0         0 // Button status bit
  18          #define KEY_STATE_1         1
  19          #define KEY_STATE_2         2
  20          #define KEY_STATE_3         3
  21          
  22          #define LONG_KEY_TIME       200 // seconds long press
  23          #define SINGLE_KEY_TIME     2 // Short press debounce time
  24           
  25          #define N_KEY               0   //No state
  26          #define S_KEY               1   //Click
  27          #define L_KEY               10  //Long press
  28          
  29          bit BIT_TMP;
  30          
  31          uint8_t key_driver(void);
  32          void GPIO_Config(void);
  33          //uint8_t type_button(void); -- cannot fix longPress
  34          
  35          void main(void)
  36          {
  37   1        uint8_t stateY = 1, stateR = 1;
  38   1        System_Clock_Select(E_HIRCEN);   //Internal 22.1184MHz
  39   1        GPIO_Config();
  40   1        
  41   1        while(1)
  42   1        {
  43   2          if(key_driver() == S_KEY)
  44   2          {
  45   3            stateY ^= 1;
  46   3            YELLOW = stateY;
  47   3          }
  48   2          else if(key_driver() == L_KEY)
  49   2          {
  50   3            stateR ^= 1;
  51   3            RED = stateR;
  52   3          }
  53   2        }
  54   1      }
C51 COMPILER V9.60.0.0   GPIO                                                              02/21/2021 17:01:05 PAGE 2   

  55          void GPIO_Config(void)
  56          {
  57   1        /*Config Led*/
  58   1        P03_PushPull_Mode;
  59   1        P04_PushPull_Mode;
  60   1        /*Config button pin*/
  61   1        P34_Input_Mode;
  62   1      }
  63          
  64          //uint8_t type_button(void)
  65          //{
  66          //  uint8_t preState = 0, type = N_KEY;
  67          //  uint16_t cnt = 0;
  68          //  
  69          //  if(BUTTON == 0) //if press
  70          //  {
  71          //    //Timer0_Delay1ms(20);
  72          //    preState = 1;
  73          //    cnt++;
  74          //    Timer0_Delay1ms(1);
  75          //  }
  76          //  if((BUTTON == 1) && (preState == 1))
  77          //  {
  78          //    preState = 0;
  79          //    cnt = 0;
  80          //    type = S_KEY; 
  81          //  }
  82          //  else if((preState == 1) &&(cnt == 2000))
  83          //  {
  84          //    preState = 0;
  85          //    cnt = 0;
  86          //    type = L_KEY;
  87          //  }
  88          //  return type;
  89          //}
  90          
  91          uint8_t key_driver(void)
  92          {
  93   1        static uint8_t keyState = KEY_STATE_0;  //button state var
  94   1        static uint16_t pressTime = 0;  //timing press time
  95   1        uint8_t keyReturn = N_KEY;
  96   1        
  97   1        switch(keyState)
  98   1        {
  99   2          case KEY_STATE_0: //not press
 100   2            if(BUTTON == 0) //press button
 101   2            {
 102   3              pressTime = 0;  //clear time press
 103   3              keyState = KEY_STATE_1;
 104   3            }
 105   2          break;
 106   2          
 107   2          case KEY_STATE_1: //debounce software
 108   2            if(BUTTON == 0) //press button
 109   2            {
 110   3              pressTime++;
 111   3              if(pressTime >= SINGLE_KEY_TIME)
 112   3              {
 113   4                keyState = KEY_STATE_2;
 114   4              }
 115   3              Timer0_Delay1ms(10);
 116   3            }
C51 COMPILER V9.60.0.0   GPIO                                                              02/21/2021 17:01:05 PAGE 3   

 117   2            else keyState = KEY_STATE_0;
 118   2          break;
 119   2            
 120   2          case KEY_STATE_2: //Determine the type of button valid: whether to click or long press
 121   2            if(BUTTON == 1) //release button =>> is a click
 122   2            {
 123   3              keyReturn = S_KEY;
 124   3              keyState = KEY_STATE_0;
 125   3            }
 126   2            else  //continue press
 127   2            {
 128   3              pressTime++;
 129   3              if(pressTime >= LONG_KEY_TIME)
 130   3              {
 131   4                keyReturn = L_KEY;
 132   4                keyState = KEY_STATE_3;
 133   4              }
 134   3              Timer0_Delay1ms(10);
 135   3            }
 136   2          break;
 137   2            
 138   2          case KEY_STATE_3:
 139   2            if(BUTTON == 1) keyState = KEY_STATE_0;
 140   2          break;
 141   2          
 142   2          default:
 143   2            keyState = KEY_STATE_0;
 144   2          break;
 145   2        }
 146   1        return keyReturn;
 147   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    205    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
